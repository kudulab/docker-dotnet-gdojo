# {{BASE_IMAGE_VERSION}} must be replaced with existing git tag.
# I added {{ }} so that docker build fails if it is not replaced.
FROM docker-registry.ai-traders.com/mono-ide:{{BASE_IMAGE_VERSION}}

# Install monodevelop and friends.
# * (1 Oct 2016) apt-get install monodevelop gets latest monodevelop available
# as .deb package, 5.10.0.871-0xamarin2, thanks to apt repo added in mono-ide:
# http://download.mono-project.com/repo/debian/ wheezy/snapshots/4.6.1.3/main amd64 Packages
# * but: monodevelop-versioncontrol=5.10.0.871-0xamarin2 depends on libgcrypt11,
# which is not in debian jessie apt sources, so let's install it from wheezy
# https://packages.debian.org/wheezy/libgcrypt11
# * then install F# language bindings
RUN wget -O libgcrypt11.deb http://security.debian.org/debian-security/pool/updates/main/libg/libgcrypt11/libgcrypt11_1.5.0-5+deb7u6_amd64.deb &&\
  dpkg -i libgcrypt11.deb && rm libgcrypt11.deb &&\
  apt-get update &&\
  DEBIAN_FRONTEND=noninteractive apt-get -y install monodevelop monodevelop-nunit \
  monodevelop-versioncontrol mono-xsp4 xdot &&\
  mkdir /tmp/MonoDevelop.FSharpBinding.5.5.0 && cd /tmp/MonoDevelop.FSharpBinding.5.5.0 &&\
  wget http://addins.monodevelop.com/Stable/Linux/5.5/MonoDevelop.FSharpBinding-5.5.0.mpack &&\
  unzip MonoDevelop.FSharpBinding-5.5.0.mpack && cd /tmp &&\
  mv /tmp/MonoDevelop.FSharpBinding.5.5.0 /usr/lib/monodevelop/AddIns/ &&\
  apt-get clean && rm -rf /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/* &&\
  su ide -c "mkdir -p /home/ide/.config/MonoDevelop-5.0 \
  /home/ide/.local/share/MonoDevelop-5.0/Policies /home/ide/.local/share/MonoDevelop-5.0/Snippets/"

# This file was generated by MonoDevelop, after I run it graphically and set:
# * enable code folding
# * do not fold comments by default
# * syntax highlighting - visual studio
# * set SourceAnalysis -> Enable text editor unit test integration
#   but it didn't change anything
COPY MonoDevelopProperties.xml /home/ide/.config/MonoDevelop-5.0/

# This file was generated by MonoDevelop, after I run it graphically and set:
# * source code -> .NET Naming Policies -> Associate namespaces with directory
# names; Directory structure: hierarchical
COPY Default.mdpolicy.xml /home/ide/.local/share/MonoDevelop-5.0/Policies

# This file was generated by MonoDevelop, after I run it graphically and added:
# * log4net template (snippet)
COPY log.template.xml /home/ide/.local/share/MonoDevelop-5.0/Snippets

RUN chown ide:ide /home/ide/.config/MonoDevelop-5.0/MonoDevelopProperties.xml \
  /home/ide/.local/share/MonoDevelop-5.0/Policies/Default.mdpolicy.xml \
  /home/ide/.local/share/MonoDevelop-5.0/Snippets/log.template.xml

# Install visual studio
ENV VSCODE_VERSION="1.12.2"
RUN apt-get update &&\
  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \
  libxss1 libnotify4 libnss3 libxkbfile1 libgconf-2-4 &&\
  apt-get clean && rm -rf /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/* &&\
  wget -O code.deb https://vscode-update.azurewebsites.net/${VSCODE_VERSION}/linux-deb-x64/stable &&\
  dpkg -i code.deb && rm code.deb
# Install visual studio extensions
ENV OMNISHARP_VSCODE_VERSION="1.11.0" \
  IONIDE_VSCODE_FSHARP_VERSION="2.27.6" \
  IONIDE_VSCODE_FAKE_VERSION="1.2.3" \
  IONIDE_VSCODE_PACKET_VERSION="1.7.0" \
  VSCODE_DOCOMMENT_VERSION="0.0.16"
RUN wget https://github.com/OmniSharp/omnisharp-vscode/releases/download/v${OMNISHARP_VSCODE_VERSION}/csharp-${OMNISHARP_VSCODE_VERSION}.vsix  &&\
  sudo -E -H -u ide /bin/bash -c "code --install-extension csharp-${OMNISHARP_VSCODE_VERSION}.vsix" &&\
  rm csharp-${OMNISHARP_VSCODE_VERSION}.vsix &&\
  wget https://github.com/ionide/ionide-vscode-fsharp/releases/download/${IONIDE_VSCODE_FSHARP_VERSION}/Ionide-fsharp-${IONIDE_VSCODE_FSHARP_VERSION}.vsix &&\
  sudo -E -H -u ide /bin/bash -c "code --install-extension Ionide-fsharp-${IONIDE_VSCODE_FSHARP_VERSION}.vsix" &&\
  rm Ionide-fsharp-${IONIDE_VSCODE_FSHARP_VERSION}.vsix &&\
  wget https://github.com/ionide/ionide-vscode-fake/releases/download/${IONIDE_VSCODE_FAKE_VERSION}/Ionide-FAKE-${IONIDE_VSCODE_FAKE_VERSION}.vsix &&\
  sudo -E -H -u ide /bin/bash -c "code --install-extension Ionide-FAKE-${IONIDE_VSCODE_FAKE_VERSION}.vsix" &&\
  rm Ionide-FAKE-${IONIDE_VSCODE_FAKE_VERSION}.vsix &&\
  wget https://github.com/ionide/ionide-vscode-paket/releases/download/${IONIDE_VSCODE_PACKET_VERSION}/Ionide-Paket-${IONIDE_VSCODE_PACKET_VERSION}.vsix &&\
  sudo -E -H -u ide /bin/bash -c "code --install-extension Ionide-Paket-${IONIDE_VSCODE_PACKET_VERSION}.vsix" &&\
  rm Ionide-Paket-${IONIDE_VSCODE_PACKET_VERSION}.vsix &&\
  wget https://github.com/k--kato/vscode-docomment/releases/download/v${VSCODE_DOCOMMENT_VERSION}/docomment-${VSCODE_DOCOMMENT_VERSION}.vsix &&\
  sudo -E -H -u ide /bin/bash -c "code --install-extension docomment-${VSCODE_DOCOMMENT_VERSION}.vsix" &&\
  rm docomment-${VSCODE_DOCOMMENT_VERSION}.vsix
# Install vscode settings
COPY vscode_settings.json /home/ide/.config/Code/User/settings.json
RUN chown ide:ide /home/ide/.config/Code/User/settings.json

COPY etc_ide.d/scripts/* /etc/ide.d/scripts/
COPY etc_ide.d/variables/*.sh /etc/ide.d/variables

ENTRYPOINT ["/usr/bin/entrypoint.sh"]
CMD ["/bin/bash"]
