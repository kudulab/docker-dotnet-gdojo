<MonoDevelopProperties version="2.0">
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LockThisIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AdditionalOfTypeIssues.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ParameterOnlyAssignedIssue.isEnabled" value="True" />
  <Property key="MonoDevelop.Ide.NewShowMessageBubbles" value="ForErrorsAndWarnings" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfToOrExpressionIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantThisQualifierIssue.Inside constructors" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS1729TypeHasNoConstructorWithNArgumentsIssue" value="Error" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.IterateViaForeachAction" value="True" />
  <Property key="CBinding.DefaultCCompiler" value="gcc" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeFirstOrDefaultIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.FormatStringProblemIssue" value="Warning" />
  <Property key="MonoDevelop.VersionControl.Git.UseRebaseOptionWhenPulling" value="True" />
  <Property key="CodeIssues.System.String[].ClrHeapAllocationAnalyzer.ConcatenationAllocationAnalyzer.HeapAnalyzerStringConcatRule.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ParameterHidesMemberAnalyzer.RECS0082.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.InvokeAsStaticMethodCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SameGuardConditionExpressionInIfelseBranchesIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.OptionalParameterRefOutAnalyzer.RECS0028.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StaticConstructorParameterIssue" value="Error" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.Diagnostics.CSharpUnboundIdentifiersDiagnosticAnalyzer.IDE1007.enabled" value="True" />
  <Property key="SharpDevelop.TaskList.LogSeparatorPosition" value="0.49973586899101957" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.BaseMethodCallWithDefaultParameterIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithSimpleAssignmentAnalyzer.RECS0049.enabled" value="True" />
  <Property key="MonoDevelop.DesignerSupport.ClassOutline.GroupOrder" value="" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConstantNullCoalescingConditionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS1729TypeHasNoConstructorWithNArgumentsIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBoolCompareIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LocalVariableHidesMemberIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertNullableToShortFormIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantLambdaSignatureParenthesesIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToSingleIssue" value="Suggestion" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithOfTypeWhereAnalyzer.RECS0048.enabled" value="True" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CSharp.ConvertIfToSwitch.CSharpConvertIfToSwitchCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RemoveRedundantOrStatementAnalyzer.RECS0076.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithOfTypeAnyAnalyzer.RECS0039.enabled" value="True" />
  <Property key="FontProperties" />
  <Property key="Author.Company" value="" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NegativeRelationalExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnmatchedSizeSpecificationInArrayCreationIssue" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeSingleOrDefaultIssue.isEnabled" value="True" />
  <Property key="OnTheFlyFormatting" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToCountIssue.isEnabled" value="True" />
  <Property key="Dialogs.NewProjectDialog.RecentTemplates" value="FSharpConsoleProject" />
  <Property key="Dialogs.NewProjectDialog.CreateGitIgnoreFile" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.AddAnotherAccessorCodeRefactoringProvider" value="True" />
  <Property key="CBinding.ParseSystemTags" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ObjectCreationAsStatementIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ExceptionRethrowIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.EnumUnderlyingTypeIsIntAnalyzer.RECS0007.enabled" value="True" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CSharp.CodeRefactorings.InlineTemporary.InlineTemporaryCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedTypeParameterIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantExplicitNullableCreationAnalyzer.RECS0138.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConstantNullCoalescingConditionIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithSingleCallToCountAnalyzer.RECS0051.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantObjectCreationArgumentListIssue" value="Warning" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.ReplacePropertyWithMethods.ReplacePropertyWithMethodsCodeRefactoringProvider" value="True" />
  <Property key="MonoDevelop.Projects.Text.ConversionEncodings" value="" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyEmbeddedStatementIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.RemoveUnreachableCode.CSharpRemoveUnreachableCodeDiagnosticAnalyzer.IDE0035.enabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.InlineDeclaration.CSharpInlineDeclarationDiagnosticAnalyzer.IDE0018.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithOfTypeFirstOrDefaultAnalyzer.RECS0042.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantAnonymousTypePropertyNameIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantThisQualifierIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.VisualBasic.CodeFixes.SimplifyTypeNames.VisualBasicSimplifyTypeNamesDiagnosticAnalyzer.IDE0002.severity" value="Hidden" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.VisualBasic.RemoveUnnecessaryImports.VisualBasicRemoveUnnecessaryImportsDiagnosticAnalyzer.RemoveUnnecessaryImportsFixable.severity" value="Hidden" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToSingleOrDefaultIssue" value="Suggestion" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.FlipOperatorArgumentsCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantParamsIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.RemoveUnnecessaryImports.CSharpRemoveUnnecessaryImportsDiagnosticAnalyzer.IDE0005.severity" value="Hidden" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ParameterOnlyAssignedAnalyzer.RECS0099.enabled" value="True" />
  <Property key="Monodevelop.TaskListTokens" value="FIXME:2;TODO:1;HACK:1;UNDONE:0" />
  <Property key="ContextActions.text/html" value="" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.SealedMemberInSealedClassAnalyzer.RECS0008.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.StringCompareToIsCultureSpecificAnalyzer.RECS0064.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseMethodAnyIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithLastOrDefaultIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.ReplaceMethodWithProperty.ReplaceMethodWithPropertyCodeRefactoringProvider" value="True" />
  <Property key="IsWholeWordOnly" value="False" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.FormatStringProblemAnalyzer.RECS0155.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0127ReturnMustNotBeFollowedByAnyExpression" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithLastOrDefaultIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StaticEventSubscriptionIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ReplaceDirectCastWithSafeCastCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OptionalParameterHierarchyMismatchIssue.isEnabled" value="True" />
  <Property key="ShowLineNumberMargin" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ConvertConditionalTernaryToNullCoalescingAnalyzer.RECS0010.enabled" value="True" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CSharp.ConvertAutoPropertyToFullProperty.CSharpConvertAutoPropertyToFullPropertyCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantStringToCharArrayCallAnalyzer.RECS0123.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.LocalVariableHidesMemberAnalyzer.RECS0117.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToLastOrDefaultIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PossibleMultipleEnumerationIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.UseExpressionBody.UseExpressionBodyDiagnosticAnalyzer.IDE0021.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnreachableCodeIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.NotImplementedExceptionAnalyzer.RECS0083.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SimplifyConditionalTernaryExpressionIssue.isEnabled" value="True" />
  <Property key="IncludeWhitespaces" value="All" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.UsePatternMatching.CSharpIsAndCastCheckDiagnosticAnalyzer.IDE0020.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringLastIndexOfIsCultureSpecificIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToFirstOrDefaultIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantPrivateIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberHidesStaticFromOuterClassIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseArrayCreationExpressionIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.Diagnostics.AddBraces.CSharpAddBracesDiagnosticAnalyzer.IDE0011.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantEmptyFinallyBlockAnalyzer.RECS0118.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantToStringCallIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.EmptyGeneralCatchClauseAnalyzer.RECS0022.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertMultiplyToShiftCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DisposeMethodInNonIDisposableTypeIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.InitializeReadOnlyAutoPropertyFromConstructorParameterCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseMethodIsInstanceOfTypeIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.PossibleMistakenCallToGetTypeAnalyzer.RECS0035.enabled" value="True" />
  <Property key="MonoDevelop.Debugger.DebuggingService.GroupPrivateMembers" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.UseInferredMemberName.CSharpUseInferredMemberNameDiagnosticAnalyzer.IDE0037.enabled" value="True" />
  <Property key="MonoDevelop.Debugger.DebuggingService.ProjectAssembliesOnly" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToAverageIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0759RedundantPartialMethodIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfStatementToConditionalTernaryExpressionIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ExpressionIsNeverOfProvidedTypeIssue" value="Warning" />
  <Property key="MonoDevelop.Shell" value="xterm" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.NonPublicMethodWithTestAttributeAnalyzer.RECS0009.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SuggestUseVarKeywordEvidentIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.AddAccessibilityModifiers.CSharpAddAccessibilityModifiersDiagnosticAnalyzer.IDE0040.enabled" value="True" />
  <Property key="MonoDevelop.Ide.UserInterfaceTheme" value="" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.BaseMethodParameterNameMismatchAnalyzer.RECS0133.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.CreateEventInvocatorCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.AddOptionalParameterToInvocationCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ParameterCanBeDeclaredWithBaseTypeIssue" value="Hint" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.CheckIfParameterIsNullCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ForStatementConditionIsTrueIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToLambdaExpressionIssue" value="Suggestion" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.EmptyEmbeddedStatementAnalyzer.RECS0034.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantUsingDirectiveIssue.isEnabled" value="True" />
  <Property key="DefaultRegionsFolding" value="False" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.CreateDelegateAction" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantAttributeParenthesesAnalyzer.RECS0071.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConstantConditionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExtendsListEntryIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertEqualityOperatorToEqualsCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AccessToDisposedClosureIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeLongCountIssue" value="Suggestion" />
  <Property key="TabIsReindent" value="False" />
  <Property key="MonoDevelop.Ide.AddinUpdater.TestMode" value="" />
  <Property key="CodeIssues.System.String[].ClrHeapAllocationAnalyzer.CallSiteImplicitAllocationAnalyzer.HeapAnalyzerImplicitParamsRule.severity" value="Warning" />
  <Property key="SharpDevelop.Workbench.WorkbenchMemento">
    <Property key="windowState" value="Maximized" />
    <Property key="fullscreen" value="False" />
    <Property key="bounds" value="0, 0, 1278, 963" />
  </Property>
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LongLiteralEndingLowerLIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertIfStatementToNullCoalescingExpressionAction" value="True" />
  <Property key="SmartSemicolonPlacement" value="False" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.VisualBasic.RemoveUnnecessaryImports.VisualBasicRemoveUnnecessaryImportsDiagnosticAnalyzer.IDE0005.severity" value="Hidden" />
  <Property key="FSharpBinding.FsiFontName" value="Monospace 10" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DelegateSubtractionIssue" value="Warning" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CSharp.MoveDeclarationNearReference.CSharpMoveDeclarationNearReferenceCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyGeneralCatchClauseIssue" value="Warning" />
  <Property key="MonoDevelop.Debugger.DebuggingService.AllowToStringCalls" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.NegateLogicalExpressionCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.AccessToStaticMemberViaDerivedTypeAnalyzer.RECS0030.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithOfTypeLastAnalyzer.RECS0043.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantTernaryExpressionAnalyzer.RECS0075.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.SimplifyConditionalTernaryExpressionAnalyzer.RECS0059.enabled" value="True" />
  <Property key="FSharpBinding.FsiPath" value="" />
  <Property key="CompletionCharacters.C/C++.CompleteOnChars" value="{}[]().,:;+-*/%&amp;|^!~=&lt;&gt;?@#'&quot;\" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantDelegateCreationIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.MemberHidesStaticFromOuterClassAnalyzer.RECS0146.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PossibleMultipleEnumerationIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantPrivateIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeWhereIssue" value="Suggestion" />
  <Property key="CBinding.CTagsExecutable" value="ctags" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ArrayCreationCanBeReplacedWithArrayInitializerIssue" value="Warning" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.GenerateEqualsAndGetHashCodeFromMembers.GenerateEqualsAndGetHashCodeFromMembersCodeRefactoringProvider" value="True" />
  <Property key="EnableCompletionCategoryMode" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantObjectCreationArgumentListAnalyzer.RECS0104.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.XmlDocAnalyzer.RECS0081.enabled" value="True" />
  <Property key="SharpDevelop.TaskList.ShowMessages" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OptionalParameterCouldBeSkippedIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantStringToCharArrayCallIssue" value="Warning" />
  <Property key="MonoDevelop.AnalysisCore.AnalysisEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0152DuplicateCaseLabelValueIssue" value="Error" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ValueParameterNotUsedAnalyzer.RECS0029.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseIsOperatorIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.CreateOverloadWithoutParameterCodeRefactoringProvider" value="True" />
  <Property key="Monodevelop.FileSelector.LastPattern" value="*" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedLabelIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.DoNotCallOverridableMethodsInConstructorAnalyzer.RECS0021.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithStringIsNullOrEmptyIssue" value="Suggestion" />
  <Property key="MonoDevelop.Ide.RunWithWarnings" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.InitializeFieldFromConstructorParameterCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EnumUnderlyingTypeIsIntIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeAnyIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToFirstOrDefaultIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EventUnsubscriptionViaAnonymousDelegateIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantArgumentDefaultValueIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NotResolvedInTextIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CheckNamespaceIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PartialMethodParameterNameMismatchIssue.isEnabled" value="True" />
  <Property key="CodeActionUsages">
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.ExtractMethod.ExtractMethodAction'0" value="25" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.CheckIfParameterIsNullAction'0" value="1" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.IntroduceConstantAction'0" value="4" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.AbstractAndVirtualConversionAction'0" value="1" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.DeclareLocalVariableAction'0" value="31" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.CreateFieldAction'0" value="70" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.ImplementInterfaceAction'0" value="18" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.UseExplicitTypeAction'0" value="26" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.AddBracesAction'0" value="1" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.CreateClassDeclarationAction'0" value="29" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.CreateMethodDeclarationAction'0" value="61" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.CreatePropertyAction'0" value="31" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.ImplementAbstractMembersAction'0" value="11" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.DeclareLocalVariableAction'1" value="1" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.UseVarKeywordAction" value="1" />
    <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantAssignmentIssue" value="2" />
    <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnassignedReadonlyFieldIssue" value="1" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.ImplementInterfaceAction" value="59" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.GeneratePropertyAction'0" value="3" />
    <Property key="using NUnit.Framework;" value="1" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.SplitDeclarationAndAssignmentAction'0" value="7" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.CreateConstructorDeclarationAction'0" value="7" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.CreateLocalVariableAction'0" value="31" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.ExtractFieldAction'0" value="51" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.ConvertForeachToForAction'0" value="1" />
    <Property key="ICSharpCode.NRefactory.CSharp.Refactoring.GenerateGetterAction'0" value="14" />
    <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantThisQualifierIssue" value="1" />
  </Property>
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.FormatStringProblemIssue.isEnabled" value="True" />
  <Property key="MonoDevelop.Ide.UserInterfaceLanguage" value="" />
  <Property key="Monodevelop.CommentTasksColumns" value="TRUE;TRUE;TRUE;TRUE" />
  <Property key="MonoDevelop.Ide.AddinUpdater.CheckForUpdates" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OptionalParameterRefOutIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantNameQualifierIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.Diagnostics.CSharp.CSharpCompilerDiagnosticAnalyzer.CS0006.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ForControlVariableIsNeverModifiedAnalyzer.RECS0130.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantCheckBeforeAssignmentAnalyzer.RECS0134.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToAnyIssue.isEnabled" value="True" />
  <Property key="UnderlineErrors" value="True" />
  <Property key="ShowRuler" value="False" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.UsePatternMatching.CSharpAsAndNullCheckDiagnosticAnalyzer.IDE0019.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DoubleNegationOperatorIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ConstantNullCoalescingConditionAnalyzer.RECS0098.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LongLiteralEndingLowerLIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.StringLastIndexOfIsCultureSpecificAnalyzer.RECS0062.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.InvokeAsExtensionMethodIssue" value="Suggestion" />
  <Property key="CompletionCharacters.Razor.CompleteOnSpace" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DuplicatedLinqToListOrArrayIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS1717AssignmentMadeToSameVariableIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SimplifyLinqExpressionIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.NegateIsExpressionCodeRefactoringProvider" value="True" />
  <Property key="Author.Email" value="" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.BaseMemberHasParamsIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.Diagnostics.TypeStyle.CSharpUseExplicitTypeDiagnosticAnalyzer.IDE0008.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBaseQualifierIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.EmptyNamespaceAnalyzer.RECS0006.enabled" value="True" />
  <Property key="IncludeCodeSnippetsInCompletionList" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0169FieldIsNeverUsedIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithStringIsNullOrEmptyIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeAnyIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ObjectCreationAsStatementAnalyzer.RECS0026.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertForToWhileCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantTernaryExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedParameterIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.IncorrectCallToObjectGetHashCodeIssue" value="Warning" />
  <Property key="MonoDevelop.Core.LastRunVersion" value="4.3.4" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ForStatementConditionIsTrueAnalyzer.RECS0068.enabled" value="True" />
  <Property key="PackageManagementSettings">
    <Property key="CheckUpdatedPackagesOnOpeningSolution" value="False" />
    <Property key="AutomaticPackageRestoreOnOpeningSolution" value="False" />
    <Property key="PackagesDirectory" value="packages" />
    <Property key="RecentPackages">
      <ArrayOfRecentPackageInfo xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    </Property>
  </Property>
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBaseConstructorCallIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfToAndExpressionIssue" value="Hint" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertAutoPropertyToPropertyCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.GenerateDefaultConstructors.GenerateDefaultConstructorsCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertReferenceEqualsToEqualityOperatorCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ConvertIfToAndExpressionAnalyzer.RECS0093.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeSingleIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.FlipRelationalOperatorArgumentsCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantToStringCallAnalyzer.RECS0106.enabled" value="True" />
  <Property key="HighlightCaretLine" value="False" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.UseCoalesceExpression.CSharpUseCoalesceExpressionForNullableDiagnosticAnalyzer.IDE0030.enabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.UseObjectInitializer.CSharpUseObjectInitializerDiagnosticAnalyzer.IDE0017.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.SplitDeclarationListCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.UseNullPropagation.CSharpUseNullPropagationDiagnosticAnalyzer.IDE0031.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ResultOfAsyncCallShouldNotBeIgnoredIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberCanBeMadeStaticIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.BitwiseOperatorOnEnumWithoutFlagsAnalyzer.RECS0016.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithOfTypeCountAnalyzer.RECS0040.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertHasFlagsToBitwiseFlagComparisonCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.VisualBasic.AddAccessibilityModifiers.VisualBasicAddAccessibilityModifiersDiagnosticAnalyzer.IDE0040.enabled" value="True" />
  <Property key="FontName" value="Mono 10" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EnumUnderlyingTypeIsIntIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.RemoveBracesCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StaticEventSubscriptionIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.NameOfSuggestionAnalyzer.RECS0163.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.BitwiseOperatorOnEnumWithoutFlagsIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExplicitNullableCreationIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfStatementToSwitchStatementIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OptionalParameterRefOutIssue" value="Warning" />
  <Property key="Monodevelop.StackTrace.ShowParameterType" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertStatementBodyToExpressionBodyCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.BaseMemberHasParamsAnalyzer.RECS0031.enabled" value="True" />
  <Property key="EnableQuickDiff" value="True" />
  <Property key="MonoDevelop.Debugger.DebuggingService.StepOverPropertiesAndOperators" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithStringIsNullOrEmptyAnalyzer.RECS0127.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DoNotCallOverridableMethodsInConstructorIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCommaInArrayInitializerIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.VisualBasic.AddAccessibilityModifiers.VisualBasicAddAccessibilityModifiersDiagnosticAnalyzer.IDE0040.severity" value="Hidden" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedAnonymousMethodSignatureIssue.isEnabled" value="True" />
  <Property key="MonoDevelop.DesignerSupport.ClassOutline.IsGrouped" value="False" />
  <Property key="Dialogs.NewProjectDialog.LastSelectedTemplate" value="CSharpEmptyProject" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantUnsafeContextIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ToAbstractVirtualNonVirtualConversionCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DisposeMethodInNonIDisposableTypeIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CodeRefactorings.ExtractMethod.ExtractMethodCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.PartialTypeWithSinglePartAnalyzer.RECS0001.enabled" value="True" />
  <Property key="AutoSetPatternCasing" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RemoveRedundantOrStatementIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToConstantIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AccessToModifiedClosureIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToStaticTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NonReadonlyReferencedInGetHashCodeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AutoAsyncIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.MonoDevelop.CSharp.Refactoring.CodeIssues.MonoTODOIssue" value="Warning" />
  <Property key="MonoDevelop.FileSelector.LastPath" value="/ide/work" />
  <Property key="MonoDevelop.Debugger.DebuggingService.EnginePriority" value="Mono.Debugger.Soft,Mono.Debugger.Soft.Custom,Mono.Debugger.Soft.AspNet" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.FieldCanBeMadeReadOnlyIssue" value="Suggestion" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertTernaryExpressionToIfStatementCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.ValidateFormatString.CSharpValidateFormatStringDiagnosticAnalyzer.IDE0035.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS1573ParameterHasNoMatchingParamTagIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ParameterHidesMemberIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeSingleIssue" value="Suggestion" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertForeachToForCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantInternalIssue.isEnabled" value="True" />
  <Property key="BuildBeforeRunningTests" value="True" />
  <Property key="ShowFoldMargin" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertImplicitToExplicitImplementationCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithSingleCallToFirstOrDefaultAnalyzer.RECS0053.enabled" value="True" />
  <Property key="DrawIndentationMarkers" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantDefaultFieldInitializerIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ReplaceSafeCastWithDirectCastCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].ClrHeapAllocationAnalyzer.DisplayClassAllocationAnalyzer.HeapAnalyzerClosureCaptureRule.enabled" value="True" />
  <Property key="MonoDevelop.Core.Gui.Dialogs.NewProjectDialog.DefaultPath" value="/home/tomzo" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantDefaultFieldInitializerAnalyzer.RECS0122.enabled" value="True" />
  <Property key="MonoDevelop.EnableAutomatedTesting" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantArgumentNameIssue" value="Suggestion" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.AddAccessibilityModifiers.CSharpAddAccessibilityModifiersDiagnosticAnalyzer.IDE0040.severity" value="Hidden" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertLambdaBodyExpressionToStatementCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.CheckCollectionIndexValueCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.Diagnostics.NamingStyles.CSharpNamingStyleDiagnosticAnalyzer.IDE1006.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SimplifyConditionalTernaryExpressionIssue" value="Suggestion" />
  <Property key="IncludeKeywordsInCompletionList" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.CheckStringIndexValueCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertExplicitToImplicitImplementationCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantThisQualifierIssue.Everywhere else" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.GenerateSwitchLabelsCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CheckNamespaceIssue.isEnabled" value="True" />
  <Property key="MonoDevelop.VersionControl.Git.StashUnstashWhenSwitchingBranches" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBaseQualifierIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnassignedReadonlyFieldIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertSwitchToIfCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseArrayCreationExpressionIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DontUseLinqWhenItsVerboseAndInefficientIssue.isEnabled" value="True" />
  <Property key="Monodevelop.UserTasksNormalPrioColor" value="rgb:0/0/0" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MethodOverloadWithOptionalParameterIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToSingleOrDefaultIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringStartsWithIsCultureSpecificIssue" value="Warning" />
  <Property key="MonoDevelop.Ide.DefaultTargetRuntime" value="__current" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CSharp.UseExpressionBody.UseExpressionBodyCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CompareOfFloatsByEqualityOperatorIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CanBeReplacedWithTryCastAndCheckForNullIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CompareNonConstrainedGenericWithNullIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCastIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ForCanBeConvertedToForeachIssue.isEnabled" value="True" />
  <Property key="Author.Trademark" value="" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.PartialMethodParameterNameMismatchAnalyzer.RECS0136.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CastExpressionOfIncompatibleTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantDelegateCreationIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToAverageIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeFirstOrDefaultIssue" value="Suggestion" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.UseAsAndNullCheckCodeRefactoringProvider" value="True" />
  <Property key="MonoDevelop.Ide.BeforeCompileAction" value="SaveAllFiles" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.Custom.AvoidAsyncVoidAnalyzer.RECS0165.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StaticConstructorParameterIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.UseCoalesceExpression.CSharpUseCoalesceExpressionDiagnosticAnalyzer.IDE0029.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithSingleCallToLastOrDefaultAnalyzer.RECS0055.enabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.Diagnostics.SimplifyTypeNames.CSharpSimplifyTypeNamesDiagnosticAnalyzer.IDE0002.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToMinIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PolymorphicFieldLikeEventInvocationIssue" value="Warning" />
  <Property key="MonoDevelop.Ide.AddinUpdater.LastCheck" value="05/04/2018 17:52:44" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.OrderModifiers.CSharpOrderModifiersDiagnosticAnalyzer.IDE0036.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PublicConstructorInAbstractClassIssue" value="Suggestion" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.Diagnostics.CSharp.CSharpCompilerDiagnosticAnalyzer.CS0246.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ParameterCanBeDeclaredWithBaseTypeIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CodeRefactorings.MoveType.MoveTypeCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseMethodAnyIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToLongCountIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.DelegateSubtractionAnalyzer.RECS0020.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DelegateSubtractionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NotImplementedExceptionIssue" value="Suggestion" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantEmptyDefaultSwitchBranchAnalyzer.RECS0074.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ResultOfAsyncCallShouldNotBeIgnoredIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ReplacePostfixExpressionWithAssignmentCodeRefactoringProvider" value="True" />
  <Property key="ShowWhitespaces" value="Never" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.VisualBasic.RemoveUnnecessaryImports.VisualBasicRemoveUnnecessaryImportsDiagnosticAnalyzer.RemoveUnnecessaryImportsFixable.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExplicitNullableCreationIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.MergeNestedIfAction" value="True" />
  <Property key="MonoDevelop.Ide.ExtensibleTreeView.Zoom.MonoDevelop.NUnit.TestPad" value="1" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedTypeParameterIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantObjectOrCollectionInitializerIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertClosureToMethodGroupIssue" value="Suggestion" />
  <Property key="WordNavigationStyle" value="Unix" />
  <Property key="ColorScheme" value="Visual Studio" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0183ExpressionIsAlwaysOfProvidedTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.FieldCanBeMadeReadOnlyIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantToStringCallForValueTypesIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.FunctionNeverReturnsIssue.isEnabled" value="True" />
  <Property key="Monodevelop.UserTasksLowPrioColor" value="rgb:0/0/0" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedLabelIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseMethodIsInstanceOfTypeIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ThreadStaticAtInstanceFieldIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConditionIsAlwaysTrueOrFalseIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.StringStartsWithIsCultureSpecificAnalyzer.RECS0063.enabled" value="True" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.ExtractInterface.ExtractInterfaceCodeRefactoringProvider" value="True" />
  <Property key="MonoDevelop.Ide.AddinUpdater.UpdateSpanValue" value="1" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.CheckDictionaryKeyValueCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertBitwiseFlagComparisonToHasFlagsCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ContractEnsuresNotNullReturnCodeRefactoringProvider" value="True" />
  <Property key="CompletionCharacters.Html.CompleteOnSpace" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS1573ParameterHasNoMatchingParamTagIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SameGuardConditionExpressionInIfelseBranchesIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeLastIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ProhibitedModifiersIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyEmbeddedStatementIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantIfElseBlockIssue" value="Warning" />
  <Property key="FilterCompletionListByEditorBrowsable" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToMaxIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.XmlDocIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PartialTypeWithSinglePartIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCheckBeforeAssignmentIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ValueParameterNotUsedIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithOfTypeAnalyzer.RECS0038.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithOfTypeFirstAnalyzer.RECS0041.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantDelegateCreationAnalyzer.RECS0164.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DoubleNegationOperatorIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ConvertIfDoToWhileAnalyzer.RECS0032.enabled" value="True" />
  <Property key="Dialogs.NewProjectDialog.AutoCreateProjectSubdirInExistingSolution" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ConvertClosureToMethodGroupAnalyzer.RECS0002.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantOverridenMemberIssue.isEnabled" value="True" />
  <Property key="FSharpBinding.MatchWitThemePropName" value="false" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.SuggestUseVarKeywordEvidentAnalyzer.RECS0091.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantAnonymousTypePropertyNameIssue" value="Warning" />
  <Property key="MonoDevelop.GtkCore.ShowNonContainerWarning" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToMinIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyNamespaceIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.UnusedParameterAnalyzer.RECS0154.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.BaseMethodParameterNameMismatchIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CSharp.ConvertToInterpolatedString.CSharpConvertConcatenationToInterpolatedStringRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CallToObjectEqualsViaBaseIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithOfTypeLongCountAnalyzer.RECS0045.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyNamespaceIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.InvertIfCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.UseSystemStringEmptyCodeRefactoringProvider" value="True" />
  <Property key="MonoDevelop.GtkCore.AutoSwitchGuiLayout" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantUsingDirectiveIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfStatementToConditionalTernaryExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CastExpressionOfIncompatibleTypeIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.EmptyDestructorAnalyzer.RECS0005.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedAnonymousMethodSignatureIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.BaseMethodParameterNameMismatchIssue" value="Warning" />
  <Property key="MonoDevelop.Debugger.DebuggingService.GroupStaticMembers" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithSingleCallToLongCountAnalyzer.RECS0056.enabled" value="True" />
  <Property key="MonoDevelop.Ide.NewJumpToFirstErrorOrWarning" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExplicitArrayCreationIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantObjectCreationArgumentListIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LocalVariableNotUsedIssue" value="Warning" />
  <Property key="GutterFontName" value="" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0659ClassOverrideEqualsWithoutGetHashCode.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.ConvertUnitTestToVB" value="True" />
  <Property key="CompletionCharacters.Razor.CompleteOnChars" value="{}[]().,:;+-*/%&amp;|^!~=&lt;&gt;?@#'&quot;\" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NonReadonlyReferencedInGetHashCodeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantNotNullAttributeInNonNullableTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CallToObjectEqualsViaBaseIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertMethodGroupToLambdaCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantAnonymousTypePropertyNameAnalyzer.RECS0069.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.CopyCommentsFromBaseCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RemoveRedundantOrStatementIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.InconsistentNamingIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.UseStringFormatAction" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0126ReturnMustBeFollowedByAnyExpression" value="Error" />
  <Property key="CompletionCharacters.C#.CompleteOnSpace" value="True" />
  <Property key="Dialogs.NewFileDialog.LastSelectedCategory.DotNetAssembly.C#" value="General" />
  <Property key="Dialogs.NewFileDialog.LastSelectedCategory.DotNetAssembly.F#" value="Misc" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithSingleCallToSingleAnalyzer.RECS0057.enabled" value="True" />
  <Property key="MonoDevelop.Core.Gui.Dialog.TipOfTheDayView.ShowTipsAtStartup" value="False" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.AddNewFormatItemCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeFirstIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReferenceEqualsWithValueTypeIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringIndexOfIsCultureSpecificIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeCountIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCaseLabelIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.XmlDocIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.BaseMethodCallWithDefaultParameterIssue" value="Warning" />
  <Property key="MonoDevelop.FindReplaceDialogs.FindHistory" value="Discarding added empty block&#xA;dispose&#xA;Version&#xA;ImmutableBlock&#xA;PendingWrite&#xA;Ait.TimeFile.Header.&#xA;GlobalIndex&#xA;firstpoint&#xA;RunTests&#xA;IsExiting || IsTerminating&#xA;test&#xA;doc" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RewriteIfReturnToReturnIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.CompareNonConstrainedGenericWithNullAnalyzer.RECS0017.enabled" value="True" />
  <Property key="ForceCompletionSuggestionMode" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SimplifyLinqExpressionIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AccessToStaticMemberViaDerivedTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0618UsageOfObsoleteMemberIssue.isEnabled" value="True" />
  <Property key="CompletionCharacters.Xml.CompleteOnChars" value="{}[]().,:;+-*/%&amp;|^!~=&lt;&gt;?@#'&quot;\" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantStringToCharArrayCallIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithSingleCallToAnyAnalyzer.RECS0050.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfStatementToSwitchStatementIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PossibleAssignmentToReadonlyFieldIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithOfTypeSingleAnalyzer.RECS0046.enabled" value="True" />
  <Property key="AutoFormatDocumentOnSave" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EventUnsubscriptionViaAnonymousDelegateIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0029InvalidConversionIssue.isEnabled" value="True" />
  <Property key="DefaultCommentFolding" value="True" />
  <Property key="AddOpeningOnly" value="False" />
  <Property key="SharpDevelop.TaskList.OutputViewVisible" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantIfElseBlockAnalyzer.RECS0147.enabled" value="True" />
  <Property key="AddParenthesesAfterCompletion" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnusedParameterIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantArgumentNameIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantLambdaParameterTypeIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithOfTypeSingleOrDefaultAnalyzer.RECS0047.enabled" value="True" />
  <Property key="MonoDevelop.VersionControl.Git.StashUnstashWhenUpdating" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DuplicatedLinqToListOrArrayIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToConstantIssue.isEnabled" value="True" />
  <Property key="IncludeEditorBrowsableAdvancedMembers" value="True" />
  <Property key="IsCaseSensitive" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseOfMemberOfNullReference.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ConvertIfStatementToSwitchStatementAnalyzer.RECS0012.enabled" value="True" />
  <Property key="MonoDevelop.Core.InstallUuid" value="a3bf0aa2-f2ed-4e9a-b9ce-fea9b3dee391" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantUnsafeContextAnalyzer.RECS0158.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertAnonymousMethodToLambdaCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantEmptyFinallyBlockIssue" value="Warning" />
  <Property key="MonoDevelop.Ide.NewShowErrorPadAfterBuild" value="Never" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeLastOrDefaultIssue" value="Suggestion" />
  <Property key="Monodevelop.StackTrace.ShowParameterName" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyConstructorIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.MonoDevelop.CSharp.CodeRefactorings.IntroduceVariable.SortImportsCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ReplaceVarWithExplicitTypeCodeRefactoringProvider" value="True" />
  <Property key="MonoDevelop.Ide.BuildBeforeExecuting" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCaseLabelIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantLambdaParameterTypeIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ConstantConditionAnalyzer.RECS0110.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeLastIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ArrayCreationCanBeReplacedWithArrayInitializerIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].ClrHeapAllocationAnalyzer.ExplicitAllocationAnalyzer.HeapAnalyzerLetClauseRule.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBlockInDifferentBranchesIssue.isEnabled" value="True" />
  <Property key="SharpDevelop.TaskList.ShowWarnings" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.Diagnostics.SimplifyTypeNames.CSharpSimplifyTypeNamesDiagnosticAnalyzer.IDE0002.severity" value="Hidden" />
  <Property key="MonoDevelop.Core.Gui.CurrentWorkbenchLayout" value="Solution" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantLambdaSignatureParenthesesIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCommaInArrayInitializerIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantAssignmentIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnassignedReadonlyFieldIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.RemoveUnnecessaryImports.CSharpRemoveUnnecessaryImportsDiagnosticAnalyzer.IDE0005.enabled" value="True" />
  <Property key="UseViModes" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringCompareToIsCultureSpecificIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.CheckArrayIndexValueCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.MethodOverloadWithOptionalParameterAnalyzer.RECS0137.enabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.VisualBasic.CodeFixes.SimplifyTypeNames.VisualBasicSimplifyTypeNamesDiagnosticAnalyzer.IDE0002.enabled" value="True" />
  <Property key="MonoDevelop.Ide.MSBuildVerbosity" value="Normal" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ForStatementConditionIsTrueIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToAutoPropertyIssue" value="Suggestion" />
  <Property key="MonoDevelop.Debugger.DebuggingService.AllowTargetInvoke" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.UseDefaultLiteral.CSharpUseDefaultLiteralDiagnosticAnalyzer.IDE0034.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithLastOrDefaultAnalyzer.RECS0037.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.UseSystemEnvironmentNewLineCodeRefactoringProvider" value="True" />
  <Property key="Monodevelop.StackTrace.ShowModuleName" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OptionalParameterCouldBeSkippedIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PartialTypeWithSinglePartIssue" value="Warning" />
  <Property key="FSharpBinding.TextColorPropName" value="#000000000000" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConditionalTernaryEqualBranchIssue" value="Warning" />
  <Property key="ContextActions.application/xml" value="" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringCompareIsCultureSpecificIssue" value="Warning" />
  <Property key="CodeActions.C#.MonoDevelop.RegexToolkit.CodeRefactorings.ValidateActionCodeRefactoringProvider" value="True" />
  <Property key="ControlLeftRightMode" value="MonoDevelop" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CSharp.InitializeParameter.CSharpInitializeMemberFromParameterCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.UnusedTypeParameterAnalyzer.RECS0096.enabled" value="True" />
  <Property key="AutoInsertMatchingBracket" value="False" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.UseIsNullCheck.CSharpUseIsNullCheckDiagnosticAnalyzer.IDE0041.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.JoinLocalVariableDeclarationAndAssignmentCodeRefactoringProvider" value="True" />
  <Property key="FavoriteRecentFiles" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringEndsWithIsCultureSpecificIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.JoinStringCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertConditionalTernaryToNullCoalescingIssue" value="Suggestion" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithOfTypeLastOrDefaultAnalyzer.RECS0044.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertShiftToMultiplyCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCastIssue.isEnabled" value="True" />
  <Property key="SharpDevelop.LoadDocumentProperties" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantCommaInArrayInitializerAnalyzer.RECS0113.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantUnsafeContextIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithFirstOrDefaultAnalyzer.RECS0036.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.StaticFieldOrAutoPropertyInGenericTypeAnalyzer.RECS0108.enabled" value="True" />
  <Property key="MonoDevelop.DesignerSupport.ClassOutline.IsSorted" value="False" />
  <Property key="Testing.EnableUnitTestEditorIntegration" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnmatchedSizeSpecificationInArrayCreationIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringStartsWithIsCultureSpecificIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ReverseDirectionForForLoopCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MissingInterfaceMemberImplementationIssue" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PublicConstructorInAbstractClassIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ParameterOnlyAssignedIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PossibleMistakenCallToGetTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EqualExpressionComparisonIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.AutoLinqSumAction" value="True" />
  <Property key="BufferSearchEngine" value="default" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ExplicitConversionInForEachIssue" value="Warning" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CSharp.AddFileBanner.CSharpAddFileBannerCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MissingInterfaceMemberImplementationIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AccessToStaticMemberViaDerivedTypeIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantLogicalConditionalExpressionOperandIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.UseLocalFunction.CSharpUseLocalFunctionDiagnosticAnalyzer.IDE0039.enabled" value="True" />
  <Property key="CompletionCharacters.Other.CompleteOnChars" value="{}[]().,:;+-*/%&amp;|^!~=&lt;&gt;?@#'&quot;\" />
  <Property key="Monodevelop.UserTasksHighPrioColor" value="rgb:0/0/0" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SealedMemberInSealedClassIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantComparisonWithNullIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberCanBeMadeStaticIssue.Private accessibility" value="Hint" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantInternalAnalyzer.RECS0129.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantInternalIssue" value="Hint" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.VisualBasic.RemoveUnnecessaryImports.VisualBasicRemoveUnnecessaryImportsDiagnosticAnalyzer.IDE0005.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ExceptionRethrowIssue" value="Warning" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CSharp.InitializeParameter.CSharpAddParameterCheckCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantCaseLabelAnalyzer.RECS0073.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ExtractWhileConditionToInternalIfStatementCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.MonoDevelop.CSharp.Refactoring.CodeIssues.MonoTODOIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.ValidateFormatString.CSharpValidateFormatStringDiagnosticAnalyzer.IDE0043.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.RemoveRegionEndRegionDirectivesCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantTernaryExpressionIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.UnusedParameterAnalyzer.RECS0154.severity" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ForControlVariableIsNeverModifiedIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSimpleAssignmentIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCheckBeforeAssignmentIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertCoalescingToConditionalExpressionCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CodeRefactorings.IntroduceVariable.IntroduceVariableCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberCanBeMadeStaticIssue" value="Hint" />
  <Property key="GenerateFormattingUndoStep" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LockThisIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PolymorphicFieldLikeEventInvocationIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertEqualsToEqualityOperatorCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ParameterHidesMemberIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ReplaceOperatorAssignmentWithAssignmentCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS1717AssignmentMadeToSameVariableIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.OperatorIsCanBeUsedAnalyzer.RECS0027.enabled" value="True" />
  <Property key="Monodevelop.StackTrace.ColumnsVisibility" value="" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantComparisonWithNullIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.LongLiteralEndingLowerLAnalyzer.RECS0024.enabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.UseCollectionInitializer.CSharpUseCollectionInitializerDiagnosticAnalyzer.IDE0028.enabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.RemoveUnnecessaryImports.CSharpRemoveUnnecessaryImportsDiagnosticAnalyzer.RemoveUnnecessaryImportsFixable.severity" value="Hidden" />
  <Property key="MonoDevelop.Ide.ExtensibleTreeView.Zoom.MonoDevelop.UnitTesting.TestPad" value="1" />
  <Property key="EnableAnimations" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfStatementToNullCoalescingExpressionIssue" value="Hint" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ReplaceExplicitTypeWithVarCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.BaseMemberHasParamsIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CompareOfFloatsByEqualityOperatorIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeWhereIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.AddConstructorParametersFromMembers.AddConstructorParametersFromMembersCodeRefactoringProvider" value="True" />
  <Property key="Monodevelop.StackTrace.ShowParameterValue" value="False" />
  <Property key="Dialogs.NewProjectDialog.LastSelectedCategoryPath" value="other/net" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ValueParameterNotUsedIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ThreadStaticAtInstanceFieldAnalyzer.RECS0157.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.InsertAnonymousMethodSignatureCodeRefactoringProvider" value="True" />
  <Property key="ContextActions.text/x-csharp" value="" />
  <Property key="ContextActions.text/x-fsharp" value="" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0759RedundantPartialMethodIssue" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CompareNonConstrainedGenericWithNullIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.RemoveUnnecessaryImports.CSharpRemoveUnnecessaryImportsDiagnosticAnalyzer.RemoveUnnecessaryImportsFixable.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ReplaceWithOperatorAssignmentCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.MonoDevelop.CSharp.CodeRefactorings.IntroduceVariable.SortAndRemoveImportsCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.NonReadonlyReferencedInGetHashCodeAnalyzer.RECS0025.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.AddNullCheckCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.IncorrectCallToObjectGetHashCodeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExplicitArraySizeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfStatementToNullCoalescingExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberCanBeMadeStaticIssue.Non-private accessibility.isEnabled" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantNameQualifierIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UnreachableCodeIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertDoWhileToWhileLoopCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBaseConstructorCallIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ExplicitConversionInForEachIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ConvertNullableToShortFormAnalyzer.RECS0013.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ConvertIfToOrExpressionAnalyzer.RECS0033.enabled" value="True" />
  <Property key="IndentStyle" value="Smart" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.RemoveCatchExceptionCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.QualifyMemberAccess.CSharpQualifyMemberAccessDiagnosticAnalyzer.IDE0009.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertIfStatementToSwitchStatementCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PossibleMistakenCallToGetTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantParamsIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AccessToDisposedClosureIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantEnumerableCastCallIssue.isEnabled" value="True" />
  <Property key="FSharpBinding.BaseColorPropName" value="#FFFFFFFFFFFF" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.GenerateConstructorFromMembers.GenerateConstructorFromMembersCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SealedMemberInSealedClassIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0152DuplicateCaseLabelValueIssue.isEnabled" value="True" />
  <Property key="MonoDevelop.Debugger.DebuggingService.FlattenHierarchy" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PartialMethodParameterNameMismatchIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ExtractAnonymousMethodCodeRefactoringProvider" value="True" />
  <Property key="Dialogs.NewProjectDialog.SelectedLanguage" value="C#" />
  <Property key="CompletionCharacters.Xml.CompleteOnSpace" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantArgumentDefaultValueIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantDefaultFieldInitializerIssue" value="Hint" />
  <Property key="CBinding.DefaultCppCompiler" value="g++" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantPrivateAnalyzer.RECS0145.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantEmptyDefaultSwitchBranchIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.InitializeAutoPropertyFromConstructorParameterCodeRefactoringProvider" value="True" />
  <Property key="FSharpBinding.AdvanceToNextLine" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantExplicitArraySizeAnalyzer.RECS0103.enabled" value="True" />
  <Property key="MonoDevelop.Ide.DefaultHideMessageBubbles" value="False" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CSharp.UseNamedArguments.CSharpUseNamedArgumentsCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertLambdaToAnonymousMethodCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ProhibitedModifiersIssue" value="Error" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ConvertToStaticTypeAnalyzer.RECS0014.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertNullableToShortFormIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DoNotCallOverridableMethodsInConstructorIssue" value="Warning" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.EncapsulateField.EncapsulateFieldRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0618UsageOfObsoleteMemberIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.InvokeAsExtensionMethodIssue.isEnabled" value="True" />
  <Property key="MonoDevelop.Ide.AddinUpdater.UpdateSpanUnit" value="Day" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConstantConditionIssue" value="Warning" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CSharp.ConvertToInterpolatedString.CSharpConvertPlaceholderToInterpolatedStringRefactoringProvider" value="True" />
  <Property key="HighlightMatchingBracket" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToLambdaExpressionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToLastIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.UseDeconstruction.CSharpUseDeconstructionDiagnosticAnalyzer.IDE0042.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0169FieldIsNeverUsedIssue.isEnabled" value="True" />
  <Property key="FSharpBinding.HighlightMutables" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyStatementIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.EventUnsubscriptionViaAnonymousDelegateAnalyzer.RECS0023.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NotImplementedExceptionIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToLongCountIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NonPublicMethodWithTestAttributeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToSingleIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.FunctionNeverReturnsIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ConditionIsAlwaysTrueOrFalseAnalyzer.RECS0065.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyStatementIssue.isEnabled" value="True" />
  <Property key="SharpDevelop.LoadPrevProjectOnStartup" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EqualExpressionComparisonIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.SplitIfWithOrConditionInTwoCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AdditionalOfTypeIssues" value="Hint" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertIfStatementToReturnStatementAction" value="True" />
  <Property key="MonoDevelop.Core.LastRunRevision" value="5" />
  <Property key="Author.Name" value="mono" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StaticFieldInGenericTypeIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.PutInsideUsingAction" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToLastIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OperatorIsCanBeUsedIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantThisQualifierIssue.Inside constructors.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.EmptyConstructorAnalyzer.RECS0004.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyDestructorIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantEmptyFinallyBlockIssue.isEnabled" value="True" />
  <Property key="MonoDevelop.Core.Gui.Dialogs.NewProjectDialog.AutoCreateProjectSubdir" value="False" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.UseMethodAnyAnalyzer.RECS0116.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AutoAsyncIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.EqualExpressionComparisonAnalyzer.RECS0088.enabled" value="True" />
  <Property key="MonoDevelop.Debugger.DebuggingService.EvaluationTimeout" value="2500" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.GenerateOverrides.GenerateOverridesCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantToStringCallIssue.isEnabled" value="True" />
  <Property key="AddImportedItemsToCompletionList" value="False" />
  <Property key="MonoDevelop.Ide.SelectEncodingsDialog.ConversionEncodings" value="65001,28605,1200" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringIndexOfIsCultureSpecificIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExplicitArraySizeIssue" value="Warning" />
  <Property key="SharpDevelop.CreateBackupCopy" value="False" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.SplitStringCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CanBeReplacedWithTryCastAndCheckForNullIssue" value="Suggestion" />
  <Property key="MonoDevelop.Ide.ExtensibleTreeView.Zoom.ProjectPad" value="1" />
  <Property key="Author.Copyright" value="tomzo" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ArrayCreationCanBeReplacedWithArrayInitializerAnalyzer.RECS0085.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.AddCatchExceptionCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertWhileToDoWhileLoopCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeSingleOrDefaultIssue" value="Suggestion" />
  <Property key="Dialogs.NewProjectDialog.LastSelectedCategory" value="F#" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSimpleAssignmentIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.UseExplicitTupleName.UseExplicitTupleNameDiagnosticAnalyzer.IDE0033.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.SuggestUseVarKeywordEvidentIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OptionalParameterHierarchyMismatchIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToStaticTypeIssue" value="Hint" />
  <Property key="Monodevelop.StackTrace.ShowLineNumber" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToSumIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfDoToWhileIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.StringIndexOfIsCultureSpecificAnalyzer.RECS0060.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExtendsListEntryIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.Diagnostics.Analyzers.CSharpPreferFrameworkTypeDiagnosticAnalyzer.IDE0014.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.StringEndsWithIsCultureSpecificAnalyzer.RECS0061.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MethodOverloadWithOptionalParameterIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.DoubleNegationOperatorAnalyzer.RECS0066.enabled" value="True" />
  <Property key="EnableSyntaxHighlighting" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StaticFieldInGenericTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertToAutoPropertyIssue.isEnabled" value="True" />
  <Property key="CompletionListRows" value="7" />
  <Property key="AssemblyBrowser.Language" value="0" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyConstructorIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToFirstIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReferenceEqualsWithValueTypeIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithSingleCallToSingleOrDefaultAnalyzer.RECS0058.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithSingleCallToLastAnalyzer.RECS0054.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantEnumerableCastCallIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NonPublicMethodWithTestAttributeIssue" value="Hint" />
  <Property key="LineEndingConversion" value="Ask" />
  <Property key="XmlEditor.AddIn.Options">
    <Property key="AutoInsertFragment" value="False" />
    <Property key="ShowSchemaAnnotation" value="False" />
    <Property key="AutoCompleteElements" value="False" />
  </Property>
  <Property key="CBinding.ParseLocalVariables" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LocalVariableNotUsedIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberCanBeMadeStaticIssue.Private accessibility.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToMaxIssue.isEnabled" value="True" />
  <Property key="CompletionCharacters.Html.CompleteOnChars" value="{}[]().,:;+-*/%&amp;|^!~=&lt;&gt;?@#'&quot;\" />
  <Property key="CompletionCharacters.Other.CompleteOnSpace" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.ConvertInstanceToStaticMethodCodeRefactoringProvider" value="True" />
  <Property key="MonoDevelop.EnableInstrumentation" value="False" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertLambdaStatementToExpressionCodeRefactoringProvider" value="True" />
  <Property key="EnableAutoCodeCompletion" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.Diagnostics.CSharp.CSharpCompilerDiagnosticAnalyzer.CS0246.severity" value="Error" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0659ClassOverrideEqualsWithoutGetHashCode" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantBaseQualifierAnalyzer.RECS0072.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ReplaceAssignmentWithPostfixExpressionCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertExpressionBodyToStatementBodyCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ForCanBeConvertedToForeachIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantAttributeParenthesesIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToLastOrDefaultIssue" value="Suggestion" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.CheckStringBuilderIndexValueCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringLastIndexOfIsCultureSpecificIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.DontUseLinqWhenItsVerboseAndInefficientIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.LocalVariableHidesMemberIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.UseThrowExpression.CSharpUseThrowExpressionDiagnosticAnalyzer.IDE0016.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantBaseConstructorCallAnalyzer.RECS0126.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ConditionalTernaryEqualBranchAnalyzer.RECS0019.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCatchClauseIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantAssignmentIssue.isEnabled" value="True" />
  <Property key="FSharpBinding.FsiArguments" value="" />
  <Property key="WelcomePage.UpdateFromInternet" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0183ExpressionIsAlwaysOfProvidedTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBlockInDifferentBranchesIssue" value="Hint" />
  <Property key="CodeIssues.System.String[].ClrHeapAllocationAnalyzer.CallSiteImplicitAllocationAnalyzer.HeapAnalyzerImplicitParamsRule.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConditionIsAlwaysTrueOrFalseIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertIfStatementToConditionalTernaryExpressionCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.PublicConstructorInAbstractClassAnalyzer.RECS0120.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithFirstOrDefaultIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NegativeRelationalExpressionIssue" value="Suggestion" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertHexToDecCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantAttributeParenthesesIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.FieldCanBeMadeReadOnlyAnalyzer.RECS0092.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertConditionalTernaryToNullCoalescingIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.Diagnostics.RemoveUnnecessaryCast.CSharpRemoveUnnecessaryCastDiagnosticAnalyzer.IDE0004.enabled" value="True" />
  <Property key="FSharpBinding.ShowTypeSignatures" value="False" />
  <Property key="EnableSemanticHighlighting" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToSumIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ObjectCreationAsStatementAnalyzer.RECS0026.severity" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberCanBeMadeStaticIssue.Non-private accessibility" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertClosureToMethodGroupIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.NotResolvedInTextAnalyzer.RECS0143.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantEmptyDefaultSwitchBranchIssue" value="Warning" />
  <Property key="EnableHighlightUsages" value="False" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.PopulateSwitch.PopulateSwitchDiagnosticAnalyzer.IDE0010.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantExplicitArrayCreationIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ImportStaticClassWithUsingCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.SplitIfWithAndConditionInTwoCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.MemberHidesStaticFromOuterClassIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.CompareOfFloatsByEqualityOperatorAnalyzer.RECS0018.enabled" value="True" />
  <Property key="MonoDevelop.FindReplaceDialogs.SearchOptions">
    <Property key="Scope" value="1" />
    <Property key="IncludeBinaryFiles" value="False" />
    <Property key="IncludeHiddenFiles" value="False" />
    <Property key="MonoDevelop.FindReplaceDialogs.FileMask" value="" />
    <Property key="CaseSensitive" value="True" />
    <Property key="WholeWordsOnly" value="True" />
    <Property key="RegexSearch" value="False" />
  </Property>
  <Property key="MonoDevelop.Core.FirstRun" value="False" />
  <Property key="MonoDevelop.Ide.AddinUpdater.UpdateLevel" value="Stable" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantNotNullAttributeInNonNullableTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringEndsWithIsCultureSpecificIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConditionalTernaryEqualBranchIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertInterpolatedStringToStringFormatCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.InvokeAsExtensionMethodAnalyzer.RECS0015.enabled" value="True" />
  <Property key="CompletionCharacters.C#.CompleteOnChars" value="{}[]().,:;+-*/%&amp;|^!~=&lt;&gt;?@#'&quot;\" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseOfMemberOfNullReference" value="Warning" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.EmptyStatementAnalyzer.RECS0067.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0127ReturnMustNotBeFollowedByAnyExpression.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.SplitLocalVariableDeclarationAndAssignmentCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantObjectOrCollectionInitializerIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.Diagnostics.TypeStyle.CSharpUseImplicitTypeDiagnosticAnalyzer.IDE0007.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyGeneralCatchClauseIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.NotResolvedInTextIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertDecToHexCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.Diagnostics.SimplifyTypeNames.CSharpSimplifyTypeNamesDiagnosticAnalyzer.IDE0001.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.AddBracesCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.BaseMethodCallWithDefaultParameterAnalyzer.RECS0003.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfToAndExpressionIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ChangeAccessModifierAction" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantBoolCompareIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantCatchClauseIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RewriteIfReturnToReturnIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantThisQualifierIssue.Everywhere else.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithFirstOrDefaultIssue.isEnabled" value="True" />
  <Property key="CodeIssues.System.String[].ClrHeapAllocationAnalyzer.EnumeratorAllocationAnalyzer.HeapAnalyzerEnumeratorAllocationRule.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ContractRequiresStringNotNullOrEmptyCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.ReplaceWithSingleCallToFirstAnalyzer.RECS0052.enabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertMethodGroupToAnonymousMethodCodeRefactoringProvider" value="True" />
  <Property key="ToolboxIsInCompactMode" value="False" />
  <Property key="MonoDevelop.LogAgent.ReportCrashes" value="False" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.Editor.Implementation.RenameTracking.RenameTrackingDiagnosticAnalyzer.RenameTracking.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringCompareIsCultureSpecificIssue.isEnabled" value="True" />
  <Property key="MonoDevelop.FindReplaceDialogs.ReplaceHistory" value="new IntPtr(this.FirstPtr.ToInt64() + position)&#xA;WritableBlock&#xA;PendingWrite&lt;Version&gt;&#xA;PendingWrite&lt;byte&gt;&#xA;PendingWrite&lt;long&gt;&#xA;PendingWrite&lt;int&gt;&#xA;&#xA;GlobalDate&#xA;ShouldStop&#xA;Instant" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ExpressionIsNeverOfProvidedTypeIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantToStringCallForValueTypesIssue" value="Hint" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.PossibleAssignmentToReadonlyFieldIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.CSharp.InvokeDelegateWithConditionalAccess.InvokeDelegateWithConditionalAccessAnalyzer.IDE1005.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ObjectCreationAsStatementIssue" value="Warning" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeCountIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeFirstIssue" value="Suggestion" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.ChangeSignature.ChangeSignatureCodeRefactoringProvider" value="True" />
  <Property key="WrapLines" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.UseIsOperatorIssue" value="Suggestion" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertStringFormatToInterpolatedStringCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CSharp.ReplaceDocCommentTextWithTag.CSharpReplaceDocCommentTextWithTagCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.InvertConditionalOperatorCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantLogicalConditionalExpressionOperandIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.AddNameToArgumentCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ContractRequiresNotNullCodeRefactoringProvider" value="True" />
  <Property key="/MonoDevelop/Ide/GlobalOptionsDialog-lastPanel" value="NuGetGeneral" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ComputeConstantValueCodeRefactoringProvider" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.CallToObjectEqualsViaBaseAnalyzer.RECS0149.enabled" value="True" />
  <Property key="Monodevelop.ErrorListColumns" value="TRUE;TRUE;TRUE;TRUE;TRUE;TRUE;TRUE" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToAnyIssue" value="Suggestion" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.FlipEqualsTargetAndArgumentCodeRefactoringProvider" value="True" />
  <Property key="MonoDevelop.Projects.GlobalPolicyMimeTypes" value="" />
  <Property key="MonoDevelop.Ide.WorkbenchCompactness" value="Normal" />
  <Property key="CodeIssues.System.String[].MonoDevelop.CSharp.Diagnostics.MonoTODODiagnostic.MonoTODODiagnosticAnalyzer.XS0001.enabled" value="True" />
  <Property key="CodeIssues.System.String[].RefactoringEssentials.CSharp.Diagnostics.RedundantArgumentNameAnalyzer.RECS0070.enabled" value="True" />
  <Property key="/MonoDevelop/ProjectModel/Gui/ItemOptionPanels-lastPanel" value="OutputOptionsPanel" />
  <Property key="CodeIssues.System.String[].ClrHeapAllocationAnalyzer.TypeConversionAllocationAnalyzer.HeapAnalyzerBoxingRule.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ThreadStaticAtInstanceFieldIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.Microsoft.CodeAnalysis.CSharp.ConvertNumericLiteral.CSharpConvertNumericLiteralCodeRefactoringProvider" value="True" />
  <Property key="CompletionCharacters.C/C++.CompleteOnSpace" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.OperatorIsCanBeUsedIssue" value="Warning" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.CreateChangedEventCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.GenerateGetterAction" value="True" />
  <Property key="MonoDevelop.Debugger.DebuggingService.DebuggerLogging" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantOverridenMemberIssue" value="Warning" />
  <Property key="CodeIssues.System.String[].Microsoft.CodeAnalysis.EditAndContinue.RudeEditDiagnosticAnalyzer.ENC0001.enabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.EmptyDestructorIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.InconsistentNamingIssue.isEnabled" value="True" />
  <Property key="MonoDevelop.TextEditor.Document.Document.DefaultDocumentAggregatorProperties" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeLastOrDefaultIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithOfTypeLongCountIssue.isEnabled" value="True" />
  <Property key="Monodevelop.TaskList.ActiveView" value="MonoDevelop.Ide.Tasks.CommentTasksView" />
  <Property key="ScrollBar.Mode" value="Overview" />
  <Property key="Dialogs.NewProjectDialog.UseGit" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantIfElseBlockIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfToOrExpressionIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ConvertEqualityOperatorToReferenceEqualsCodeRefactoringProvider" value="True" />
  <Property key="FSharpBinding.MatchWithThemePropName" value="False" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0029InvalidConversionIssue" value="Error" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ReplaceAutoPropertyWithPropertyAndBackingFieldCodeRefactoringProvider" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.CreateCustomEventImplementationAction" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.AddExceptionDescriptionCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.StringCompareToIsCultureSpecificIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToCountIssue" value="Suggestion" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.CS0126ReturnMustBeFollowedByAnyExpression.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.BitwiseOperatorOnEnumWithoutFlagsIssue.isEnabled" value="True" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.ReplacePropertyWithBackingFieldWithAutoPropertyCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ConvertIfDoToWhileIssue" value="Suggestion" />
  <Property key="CodeActions.C#.RefactoringEssentials.CSharp.CodeRefactorings.InvertLogicalExpressionCodeRefactoringProvider" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.AccessToModifiedClosureIssue.isEnabled" value="True" />
  <Property key="MainToolbar.Search.IncludeMembers" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ReplaceWithSingleCallToFirstIssue" value="Suggestion" />
  <Property key="SharpDevelop.TaskList.ShowErrors" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.ForControlVariableIsNeverModifiedIssue.isEnabled" value="True" />
  <Property key="refactoring.codeissues.text/x-csharp.ICSharpCode.NRefactory.CSharp.Refactoring.RedundantThisQualifierIssue" value="Warning" />
</MonoDevelopProperties>